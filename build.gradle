plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.likelion.backendplus4.talkpick'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //RDB
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // OpenAi
    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter:1.0.0-M5'

    //P6spy
    implementation "com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0"

    //JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    //Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    //Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //Valid
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //Spring-batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    testImplementation 'org.springframework.batch:spring-batch-test'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'

    //rabbitmq (amqp: (Advanced Message Queuing Protocol))
    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    //WebSocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-reactor-netty'

    //Mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    useJUnitPlatform()

    systemProperty 'file.encoding', 'UTF-8'
    systemProperty 'user.timezone', 'Asia/Seoul'

    jvmArgs '-Dfile.encoding=UTF-8', '-Duser.country=KR', '-Duser.language=ko'

    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showStandardStreams = false
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}